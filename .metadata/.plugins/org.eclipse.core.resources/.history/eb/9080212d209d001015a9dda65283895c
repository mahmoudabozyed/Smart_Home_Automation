#include "MCAL/ADC/ADC.h"
#include "HAL/LCD/LCD.h"
#include "MCAL/PWM/PWM.h"
#include "HAL/DCMotor/DCMotor.h"
#include "HAL/LDR/LDR.h"
#include "HAL/LM35/LM35.h"
#include "HAL/Flame_sensor/Flame.h"
#include "HAL/LED/LED.h"
#include "HAL/BUZZER/Buzzer.h"
#include "MCAL/GPIO/common_macros.h"
#include "MCAL/GPIO/std_type.h"

#include <avr/io.h>
#include <util/delay.h>

int main(void) {
	uint16 light_intensity;
	uint8 temperature;
	uint8 flame_detected;

	// Initialize all drivers
	ADC_init();
	FlameSensor_init();
	LCD_init();
	DcMotor_Init();
	Buzzer_init();
	LEDS_init();

	// Display static headers
	LCD_displayStringRowColumn(0, 3, "FAN is ");
	LCD_displayStringRowColumn(1, 0, "Temp= ");
	LCD_displayStringRowColumn(1, 9, "LDR= ");

	while (1) {
		/* ================= Fire Detection (First Priority) ================= */
		flame_detected = FlameSensor_getValue();
		if (flame_detected == HIGH) {
			Buzzer_on();
			LCD_clearScreen();
			LCD_displayStringRowColumn(0, 3, "CRITICAL ALERT!");
			LCD_displayStringRowColumn(1, 1, "FIRE DETECTED!");
			_delay_ms(1000);
			continue;
		} else {
			Buzzer_off();
			LCD_displayStringRowColumn(0, 3, "FAN is ");
			LCD_displayStringRowColumn(1, 0, "Temp= ");
			LCD_displayStringRowColumn(1, 9, "LDR= ");
		}

		/* ================= Read Sensors ================= */
		light_intensity = LDR_getLightIntensity();  // Channel 0
		temperature = LM35_getTemperature();        // Channel 1

		/* ================= Update Display ================= */
		// Temperature
		LCD_moveCursur(1, 6);
		if (temperature < 100)
			LCD_displayString(" ");
		LCD_moveCursur(1, 6);
		LCD_itos(temperature);
		LCD_displayString("C");

		// Light Intensity
		LCD_moveCursur(1, 14);
		if (light_intensity < 100)
			LCD_displayString(" ");
		LCD_moveCursur(1, 14);
		LCD_itos(light_intensity);
		LCD_displayString("%");

		/* ================= Fan Control ================= */
		if (temptemperature >= 40) {
			DcMotor_Rotate(CW, 100);
			LCD_displayStringRowColumn(0, 10, "ON ");
		} else if ((temperature >= 35) && (temperature < 40)) {
			DcMotor_Rotate(CW, 75);
			LCD_displayStringRowColumn(0, 10, "ON ");
		} else if ((temperature >= 30) && (temperature < 35)) {
			DcMotor_Rotate(CW, 50);
			LCD_displayStringRowColumn(0, 10, "ON ");
		} else if ((temperature >= 25) && (temperature < 30)) {
			DcMotor_Rotate(CW, 25);
			LCD_displayStringRowColumn(0, 10, "ON ");
		} else if (temperature < 25) {
			DcMotor_Rotate(Stop, 0);
			LCD_displayStringRowColumn(0, 10, "OFF");
		}

		/* ================= LED Control ================= */
		if (light_intensity < 15) {
			LED_on(RED_LED);
			LED_on(GREEN_LED);
			LED_on(BLUE_LED);
		} else if (light_intensity <= 50) {
			LED_on(RED_LED);
			LED_on(GREEN_LED);
			LED_off(BLUE_LED);
		} else if (light_intensity <= 70) {
			LED_on(RED_LED);
			LED_off(GREEN_LED);
			LED_off(BLUE_LED);
		} else {
			LED_off(RED_LED);
			LED_off(GREEN_LED);
			LED_off(BLUE_LED);
		}

		_delay_ms(500);
	}
}
